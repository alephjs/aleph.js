name: Aleph.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x

      - name: Deno fmt check
        run: deno fmt --check

      - name: Deno lint
        run: deno lint

  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x

      - name: Deno test
        run: deno test -A --unstable --location=http://localhost --import-map=import_map.json

  deploy_examples:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    strategy:
      matrix:
        include:
          - name: aleph-hello
            dir: examples/react-app

          - name: aleph-vue
            dir: examples/vue-app

          - name: aleph-api
            dir: examples/api-app

          - name: aleph-monaco-editor
            dir: examples/feature-apps/monaco-editor

          - name: aleph-unocss
            dir: examples/feature-apps/unocss

          - name: aleph-suspense-ssr
            dir: examples/feature-apps/suspense-ssr

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Build App
        env:
          ALEPH_PKG_URI: https://raw.githubusercontent.com/alephjs/aleph.js/${{ github.sha }}
        run: deno task build ${{ matrix.dir }}

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: ${{ matrix.name }}
          root: ${{ matrix.dir }}
          entrypoint: dist/server.js

  deploy_examples_rust:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    strategy:
      matrix:
        include:
          - name: aleph-yew
            dir: examples/yew-app

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Setup rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: latest

      - name: Build App
        env:
          ALEPH_PKG_URI: https://raw.githubusercontent.com/alephjs/aleph.js/${{ github.sha }}
        run: deno task build ${{ matrix.dir }}

      - name: Clean up
        run: rm -rf ${{ matrix.dir }}/target

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: ${{ matrix.name }}
          root: ${{ matrix.dir }}
          entrypoint: dist/server.js
